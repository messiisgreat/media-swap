version: "3"

services:
  mongo-primary:
    image: mongo:latest
    hostname: mongo-primary
    container_name: mongo-primary
    command: mongod --replSet replset --auth --keyFile /etc/mongod-keyfile
    volumes:
      - mongo-primary-data:/data/db
      - ./etc/init:/docker-entrypoint-initdb.d:ro
      - ./etc/mongod-keyfile:/etc/mongod-keyfile:ro
    expose:
      - "27017"
    ports:
      - "27018:27017"
    restart: always
    networks:
      - replset

  mongo-secondary:
    image: mongo:latest
    hostname: mongo-secondary
    container_name: mongo-secondary
    command: mongod --replSet replset --auth --keyFile /etc/mongod-keyfile
    volumes:
      - mongo-secondary-data:/data/db
      - ./etc/mongod-keyfile:/etc/mongod-keyfile:ro
    expose:
      - "27017"
    ports:
      - "27019:27017"
    restart: always
    networks:
      - replset

  mongo-arbiter:
    image: mongo:latest
    hostname: mongo-arbiter
    container_name: mongo-arbiter
    command: mongod --replSet replset --auth --keyFile /etc/mongod-keyfile
    volumes:
      - ./etc/mongod-keyfile:/etc/mongod-keyfile:ro
    expose:
      - "27017"
    ports:
      - "27020:27017"
    restart: always
    networks:
      - replset

  nextjs:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      - DATABASE_URL=mongodb://mongo-primary:27017,mongo-secondary:27017,mongo-arbiter:27017/ecommerce?replicaSet=replset
    depends_on:
      - mongo-primary
      - mongo-secondary
      - mongo-arbiter

volumes:
  mongo-primary-data:
  mongo-secondary-data:

networks:
  replset:
    ipam:
      config:
        - subnet: 192.168.1.0/24
